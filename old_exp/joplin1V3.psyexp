<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.2.3">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expInfo['session'], expName)" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="list"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save hdf5 file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[2560, 1440]" valType="list"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="color"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="elAddress" updates="None" val="100.1.1.1" valType="str"/>
    <Param name="elDataFiltering" updates="None" val="FILTER_LEVEL_2" valType="str"/>
    <Param name="elLiveFiltering" updates="None" val="FILTER_LEVEL_OFF" valType="str"/>
    <Param name="elModel" updates="None" val="EYELINK 1000 DESKTOP" valType="str"/>
    <Param name="elPupilAlgorithm" updates="None" val="ELLIPSE_FIT" valType="str"/>
    <Param name="elPupilMeasure" updates="None" val="PUPIL_AREA" valType="str"/>
    <Param name="elSampleRate" updates="None" val="1000" valType="num"/>
    <Param name="elSimMode" updates="None" val="False" valType="bool"/>
    <Param name="elTrackEyes" updates="None" val="RIGHT_EYE" valType="str"/>
    <Param name="elTrackingMode" updates="None" val="PUPIL_CR_TRACKING" valType="str"/>
    <Param name="expName" updates="None" val="joplin_rebuild" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="eyetracker" updates="None" val="None" valType="str"/>
    <Param name="gpAddress" updates="None" val="127.0.0.1" valType="str"/>
    <Param name="gpPort" updates="None" val="4242" valType="num"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="mgBlink" updates="None" val="('MIDDLE_BUTTON',)" valType="list"/>
    <Param name="mgMove" updates="None" val="CONTINUOUS" valType="str"/>
    <Param name="mgSaccade" updates="None" val="0.5" valType="num"/>
    <Param name="tbLicenseFile" updates="None" val="" valType="str"/>
    <Param name="tbModel" updates="None" val="" valType="str"/>
    <Param name="tbSampleRate" updates="None" val="60" valType="num"/>
    <Param name="tbSerialNo" updates="None" val="" valType="str"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <ImageComponent name="train_image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="train_image" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.5, 0.5)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="welcome">
      <CodeComponent name="welcome_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="#define random seeds&amp;#10;import random&amp;#10;random_seed = expInfo(['participant'])&amp;#10;random.seed(random_seed)&amp;#10;&amp;#10;#set paths to stimulus sets&amp;#10;stim_set1 = '/Volumes/shares/Cabi/stimuli/cartoon_animals/Set1'&amp;#10;stim_set2 = '/Volumes/shares/Cabi/stimuli/cartoon_animals/Set2'&amp;#10;&amp;#10;#define categories&amp;#10;category1 = {'categorya': 'Batmans', 'categoryb': 'Robins'}&amp;#10;category2 = {'categorya': 'Wallaces', 'categoryb': 'Gromets'}&amp;#10;if expInfo['session'] == '001':&amp;#10;    if (int(expInfo['participant'])%4) == 0:&amp;#10;        stimulus_set = stim_set1&amp;#10;        session_cat = category1&amp;#10;    if (int(expInfo['participant'])%4) == 1:&amp;#10;        stimulus_set = stim_set2&amp;#10;        session_cat = category1&amp;#10;    if (int(expInfo['participant'])%4) == 2:&amp;#10;        stimulus_set = stim_set1&amp;#10;        session_cat = category2&amp;#10;    if (int(expInfo['participant'])%4) == 3:&amp;#10;        stimulus_set = stim_set2&amp;#10;        session_cat = category2&amp;#10;&amp;#10;if expInfo['session'] == '002':&amp;#10;    if (int(expInfo['participant']) %4) == 0:&amp;#10;        stimulus_set = stim_set2&amp;#10;        session_cat = category2&amp;#10;    if (int(expInfo['participant'])%4) == 1:&amp;#10;        stimulus_set = stim_set1&amp;#10;        session_cat = category2&amp;#10;    if (int(expInfo['participant'])%4) == 2:&amp;#10;        stimulus_set = stim_set2&amp;#10;        session_cat = category1&amp;#10;    if (int(expInfo['participant'])%4) == 3:&amp;#10;        stimulus_set = stim_set1&amp;#10;        session_cat = category1&amp;#10;&amp;#10;# define the image size depending on where the image is coming from&amp;#10;if stimulus_set == stim_set2:&amp;#10;    img_size = [0.55, 0.55]&amp;#10;if stimulus_set == stim_set1:&amp;#10;    img_size = [0.4,0.6]&amp;#10;&amp;#10;# import the script and use the randpro_select function to establish a random prototype for the rest of the experiment&amp;#10;import stim_build as sb&amp;#10;randpro = sb.randpro_select('/Volumes/shares/Cabi/exp/joplin/joplin1/stim_files/prototype.csv', random_seed)&amp;#10;print(randpro)" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="import * as random from 'random';&amp;#10;import * as sb from 'stim_build';&amp;#10;var category1, category2, img_size, random_seed, randpro, session_cat, stim_set1, stim_set2, stimulus_set;&amp;#10;random_seed = expInfo([&quot;participant&quot;]);&amp;#10;random.seed(random_seed);&amp;#10;stim_set1 = &quot;/Volumes/shares/Cabi/stimuli/cartoon_animals/Set1&quot;;&amp;#10;stim_set2 = &quot;/Volumes/shares/Cabi/stimuli/cartoon_animals/Set2&quot;;&amp;#10;category1 = {&quot;categorya&quot;: &quot;Batmans&quot;, &quot;categoryb&quot;: &quot;Robins&quot;};&amp;#10;category2 = {&quot;categorya&quot;: &quot;Wallaces&quot;, &quot;categoryb&quot;: &quot;Gromets&quot;};&amp;#10;if ((expInfo[&quot;session&quot;] === &quot;001&quot;)) {&amp;#10;    if (((Number.parseInt(expInfo[&quot;participant&quot;]) % 4) === 0)) {&amp;#10;        stimulus_set = stim_set1;&amp;#10;        session_cat = category1;&amp;#10;    }&amp;#10;    if (((Number.parseInt(expInfo[&quot;participant&quot;]) % 4) === 1)) {&amp;#10;        stimulus_set = stim_set2;&amp;#10;        session_cat = category1;&amp;#10;    }&amp;#10;    if (((Number.parseInt(expInfo[&quot;participant&quot;]) % 4) === 2)) {&amp;#10;        stimulus_set = stim_set1;&amp;#10;        session_cat = category2;&amp;#10;    }&amp;#10;    if (((Number.parseInt(expInfo[&quot;participant&quot;]) % 4) === 3)) {&amp;#10;        stimulus_set = stim_set2;&amp;#10;        session_cat = category2;&amp;#10;    }&amp;#10;}&amp;#10;if ((expInfo[&quot;session&quot;] === &quot;002&quot;)) {&amp;#10;    if (((Number.parseInt(expInfo[&quot;participant&quot;]) % 4) === 0)) {&amp;#10;        stimulus_set = stim_set2;&amp;#10;        session_cat = category2;&amp;#10;    }&amp;#10;    if (((Number.parseInt(expInfo[&quot;participant&quot;]) % 4) === 1)) {&amp;#10;        stimulus_set = stim_set1;&amp;#10;        session_cat = category2;&amp;#10;    }&amp;#10;    if (((Number.parseInt(expInfo[&quot;participant&quot;]) % 4) === 2)) {&amp;#10;        stimulus_set = stim_set2;&amp;#10;        session_cat = category1;&amp;#10;    }&amp;#10;    if (((Number.parseInt(expInfo[&quot;participant&quot;]) % 4) === 3)) {&amp;#10;        stimulus_set = stim_set1;&amp;#10;        session_cat = category1;&amp;#10;    }&amp;#10;}&amp;#10;if ((stimulus_set === stim_set2)) {&amp;#10;    img_size = [0.55, 0.55];&amp;#10;}&amp;#10;if ((stimulus_set === stim_set1)) {&amp;#10;    img_size = [0.4, 0.6];&amp;#10;}&amp;#10;randpro = sb.randpro_select(&quot;/Volumes/shares/Cabi/exp/joplin/joplin1/stim_files/prototype.csv&quot;, random_seed);&amp;#10;console.log(randpro);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if expInfo['session'] == '001':&amp;#10;    welc_text = u'Welcome to the experiment! \n\n You will first complete a training phase where you will be presented images of cartoon animals and asked to determine whether they belong to the %s group or the %s group.\n\n You will not know which group the animals belong to at first. However, you will be given feedback on your answer, which you can then use to help you group the animals.\n\n Press SPACE to continue with the instructions.' % (session_cat['categorya'], session_cat['categoryb'])&amp;#10;if expInfo['session'] == '002':&amp;#10;    welc_text = u'Welcome to the experiment!\n\n Similar to the last session, you will start by completing a training phase where you will group cartoon animals into two different groups. This time, you will be asked to determine if the animal belongs to the %s group or the %s group. Remember, you will not know which group the animal belongs to at first, but will be given feedback on your answers that you can then use to help you group the animals.\n\n Press SPACE to continue with the instructions.' % (session_cat['categorya'], session_cat['categoryb'])" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="welcome_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="welcome_text">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="num"/>
        <Param name="name" updates="None" val="welcome_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="welc_text" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="welcome_key">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="welcome_key" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="train_instruct1">
      <CodeComponent name="inst1_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="inst1_train_text = u'For each image, you will have 3 seconds to give your response before the computer automatically moves to the next screen.\n\n To select %s, press &quot;f&quot;.\n To select %s, press &quot;j&quot;.\n\n Press &quot;f&quot; or &quot;j&quot; to continue with the instructions.' % (session_cat['categorya'], session_cat['categoryb'])" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="inst1_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="train_inst1_text">
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="num"/>
        <Param name="name" updates="None" val="train_inst1_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="inst1_train_text" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="train_inst1_key">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="train_inst1_key" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="train_instruct2">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="num"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="'You will complete 8 runs of the training phase. Between each run, you will be given the opportunity to take a break. You may take as long as you need before returning to the experiemnt. \n\nPress SPACE to continue. '" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="welcome"/>
    <Routine name="train_instruct1"/>
    <Routine name="train_instruct2"/>
  </Flow>
</PsychoPy2experiment>
